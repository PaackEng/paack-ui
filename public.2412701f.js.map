{"version":3,"sources":["paackSvgIconSprite.js","ellipsizableText.js","index.js"],"names":["PaackSvgIconSprite","HTMLElement","innerHTML","window","customElements","define","EllipsizableText","template","Object","assign","document","createElement","runDelayed","requestIdleCallback","requestAnimationFrame","TEXT_ATTRIBUTE","attachShadow","mode","shadowRoot","appendChild","content","cloneNode","textContent","getAttribute","textNode","querySelector","updateTooltip","bind","isOverflowing","offsetWidth","scrollWidth","existingTooltip","getExistingTooltip","removeChild","removeAttribute","classList","remove","setAttribute","add","tooltip","className","attrName","oldVal","newVal","Elm","Main","init","node","getElementById"],"mappings":"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","file":"public.2412701f.js","sourceRoot":"../showcase/public","sourcesContent":["import { readFileSync } from 'fs';\n\nconst svg = readFileSync('./dist/icon-sprite.svg', 'utf-8');\n\nclass PaackSvgIconSprite extends HTMLElement {\n  static get observedAttributes() {\n    return [];\n  }\n\n  connectedCallback() {\n    this.innerHTML = svg;\n  }\n}\n\nwindow.customElements.define('paack-svg-icon-sprite', PaackSvgIconSprite);\n","const template = Object.assign(document.createElement('template'), {\n  innerHTML: `\n      <style>\n        .text {\n          white-space: nowrap;\n          text-overflow: ellipsis;\n          overflow: hidden;\n          display: block;\n        }\n\n        .text--overflown {\n          cursor: pointer;\n        }\n\n        .tooltip {\n          outline: 0;\n          position: absolute;\n          top: calc(100% + 8px);\n          display: block;\n          z-index: 1;\n          background: rgba(228, 228, 228);\n          border-radius: 8px;\n          width: 100%;\n          box-sizing: content-box;\n          left: -12px;\n          opacity: 0;\n          width: 0;\n          clip: rect(0, 0, 0, 0);\n          word-break: break-all;\n        }\n\n        .tooltip::before {\n          content: '';\n          height: 0;\n          width: 0;\n          border: 8px solid transparent;\n          border-bottom-color: rgba(228, 228, 228);\n          position: absolute;\n          top: -16px;\n          right: 16px;\n        }\n\n        .tooltip::after {\n          content: '';\n          height: 8px;\n          width: 100%;\n          position: absolute;\n          top: -8px;\n          right: 0;\n          background: transparent;\n        }\n\n        .tooltip:focus,\n        .text--overflown:focus + .tooltip,\n        .text--overflown:hover + .tooltip {\n          opacity: 1;\n          width: 100%;\n          padding: 8px 16px;\n          clip: auto;\n        }\n      </style>\n      <span class=\"text\"></span>\n    `,\n});\n\nconst runDelayed = window.requestIdleCallback || window.requestAnimationFrame;\n\nconst TEXT_ATTRIBUTE = 'text';\n\nclass EllipsizableText extends HTMLElement {\n  constructor() {\n    super();\n    this.attachShadow({ mode: 'open' });\n    this.shadowRoot.appendChild(template.content.cloneNode(true));\n  }\n\n  static get observedAttributes() { return [TEXT_ATTRIBUTE]; }\n\n  connectedCallback() {\n    const textContent = this.getAttribute(TEXT_ATTRIBUTE);\n    this.textNode = this.shadowRoot.querySelector('.text');\n\n    this.textNode.textContent = textContent;\n\n    runDelayed(this.updateTooltip.bind(this));\n  }\n\n  updateTooltip () {\n    const isOverflowing = this.textNode.offsetWidth < this.textNode.scrollWidth;\n    const existingTooltip = this.getExistingTooltip();\n\n    if (existingTooltip && !isOverflowing) {\n      this.shadowRoot.removeChild(existingTooltip);\n      this.textNode.removeAttribute('tabIndex');\n      this.textNode.classList.remove('text--overflown');\n    }\n\n    if (!existingTooltip && isOverflowing) {\n      this.textNode.setAttribute('tabIndex', 0);\n      this.textNode.classList.add('text--overflown');\n\n      const tooltip = this.textNode.cloneNode(true);\n\n      tooltip.setAttribute('tabIndex', 0);\n\n      tooltip.className = 'tooltip';\n      this.shadowRoot.appendChild(tooltip);\n    }\n  }\n\n  getExistingTooltip () {\n    return this.shadowRoot.querySelector('.tooltip');\n  }\n\n  attributeChangedCallback(attrName, oldVal, newVal) {\n    if (attrName === TEXT_ATTRIBUTE && oldVal !== null) {\n      this.textNode.textContent = newVal;\n      this.updateTooltip();\n    }\n  }\n}\n\nwindow.customElements.define('ellipsizable-text', EllipsizableText);\n","import { Elm } from './../src/Main.elm';\nimport 'paack-ui-assets/js/paackSvgIconSprite';\nimport 'paack-ui-assets/js/ellipsizableText';\n\nElm.Main.init({\n  node: document.getElementById('root'),\n});\n"]}