name: CI
on:
  pull_request:
    types: [opened, synchronize, reopened, ready_for_review]
  push:
    branches: [master]
    tags:
      - '*'

jobs:
  validate:
   runs-on: ubuntu-latest
   if: github.event.pull_request.draft == false

   steps:
     - uses: actions/checkout@v2

     - name: Setup Node
       uses: actions/setup-node@v2.1.4
       with:
        node-version: '12'

     - name: Get yarn cache directory path
       id: yarn-cache-dir-path
       run: echo "::set-output name=dir::$(yarn cache dir)"

     - uses: actions/cache@v2.1.3
       id: yarn-cache # use this to check for `cache-hit` (`steps.yarn-cache.outputs.cache-hit != 'true'`)
       with:
        path: ${{ steps.yarn-cache-dir-path.outputs.dir }}
        key: ${{ runner.os }}-yarn-${{ hashFiles('**/yarn.lock') }}
        restore-keys: |
          ${{ runner.os }}-yarn-

     - uses: PaackEng/elm-lint-action@main
       with:
         elm-working-directory: 'showcase'
         extra-path: '../src'

  tests:
     runs-on: ubuntu-latest
     if: github.event.pull_request.draft == false

     steps:
       - uses: actions/checkout@v2

       - name: Setup Node
         uses: actions/setup-node@v2.1.4
         with:
          node-version: '12'

       - name: Get yarn cache directory path
         id: yarn-cache-dir-path
         run: echo "::set-output name=dir::$(yarn cache dir)"

       - uses: actions/cache@v2.1.3
         id: yarn-cache # use this to check for `cache-hit` (`steps.yarn-cache.outputs.cache-hit != 'true'`)
         with:
          path: ${{ steps.yarn-cache-dir-path.outputs.dir }}
          key: ${{ runner.os }}-yarn-${{ hashFiles('**/yarn.lock') }}
          restore-keys: |
            ${{ runner.os }}-yarn-

       - name: Install dependencies
         run: yarn install

       - name: Run tests
         run: yarn run test

       - name: Build
         run: yarn run build

